<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.iwiller.sys.mapper.SysRoleMapper" >
  <resultMap id="BaseResultMap" type="com.iwiller.sys.domain.SysRole" >
    <id column="roleid" property="roleid" jdbcType="INTEGER" />
    <result column="rolename" property="rolename" jdbcType="VARCHAR" />
    <result column="roledesc" property="roledesc" jdbcType="VARCHAR" />
    <result column="available" property="available" jdbcType="INTEGER" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_role
    where roleid = #{roleid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.iwiller.sys.domain.SysRole" >
    insert into sys_role (roleid, rolename, roledesc, 
      available)
    values (#{roleid,jdbcType=INTEGER}, #{rolename,jdbcType=VARCHAR}, #{roledesc,jdbcType=VARCHAR}, 
      #{available,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective"
          parameterType="com.iwiller.sys.domain.SysRole">
    insert into sys_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleid != null">
        roleid,
      </if>
      <if test="rolename != null">
        rolename,
      </if>
      <if test="roledesc != null">
        roledesc,
      </if>
      <if test="available != null">
        available,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleid != null">
        #{roleid,jdbcType=INTEGER},
      </if>
      <if test="rolename != null">
        #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledesc != null">
        #{roledesc,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        #{available,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective"
          parameterType="com.iwiller.sys.domain.SysRole">
    update sys_role
    <set>
      <if test="rolename != null">
        rolename = #{rolename,jdbcType=VARCHAR},
      </if>
      <if test="roledesc != null">
        roledesc = #{roledesc,jdbcType=VARCHAR},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=INTEGER},
      </if>
    </set>
    where roleid = #{roleid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.iwiller.sys.domain.SysRole" >
    update sys_role
    set rolename = #{rolename,jdbcType=VARCHAR},
      roledesc = #{roledesc,jdbcType=VARCHAR},
      available = #{available,jdbcType=INTEGER}
    where roleid = #{roleid,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select roleid, rolename, roledesc, available
    from sys_role
    where roleid = #{roleid,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select roleid, rolename, roledesc, available
    from sys_role
  </select>

  <select id="queryAllRole" resultMap="BaseResultMap" >
    select roleid, rolename, roledesc, available
    from sys_role
    <where>
      <if test="rolename != null and rolename !=''">
        and rolename like concat ('%',#{rolename},'%')
      </if>
      <if test="roledesc != null and roledesc !=''">
        and roledesc like concat ('%',#{roledesc},'%')
      </if>
      <if test="available != null">
        and available = #{available}
      </if>
    </where>
  </select>

  <delete id="deleteRoleMenuByRid">
    delete from sys_role_menu where rid = #{rid}
  </delete>
  
  <delete id="deleteRoleUserByRid">
    delete from sys_role_user where rid = #{rid}
  </delete>

  <insert id="insertRoleMenu">
    insert into sys_role_menu(rid,mid) values (#{rid},#{mid})
  </insert>

  <select id="queryRoleByUid" resultMap="BaseResultMap">
    select t1.*
    from sys_role t1 inner join sys_role_user t2 on (t1.roleid = t2.rid)
    where t2.uid = #{uid} and t1.available = #{available}
  </select>
  <delete id="deleteRoleUserByUid">
    delete from sys_role_user where uid = #{uid}
  </delete>

</mapper>